[{"title":"知识图谱学习（一）","date":"2020-10-26T03:04:42.933Z","url":"/SmartBoyMB.github.io/2020/10/26/KnowledgeGraphLearning1/","categories":[["undefined",""]],"content":"知识图谱学习这里将介绍有关知识图谱学习的第一部分，主要是知识图谱的一个概述。 1.知识的定义陈述性知识（描述性知识）描述客观事物的性状等静态信息，主要分为事物、概念、命题三个层次。 （1）事物特定的事和物。 （2）概念对一类事物本质特性的反映。 （3）命题对事物之间的陈述。分为非概括性命题和概括性命题。 A.非概括性命题：特定的事物之间的关系。 B.概括性命题：概念之间的普遍关系。 过程性知识（程序性知识）描述问题如何求解等动态信息，分为规则和控制结构两种类型。 （1）规则描述事物的因果关系。 （2）控制结构描述问题的求解步骤。 2.知识图谱的定义图是一种能有效表示数据之间结构的表达形式，因此，人们考虑把数据中蕴含的知识用图的结构进行形式化表示。数据的结构化并和以后的结构化数据进行关联，就构成了知识图谱。 3.知识和结构化数据的表示和存储在计算机科学领域，对知识和结构化数据的表示和存储具有不同的技术路线，最典型的包括本体（Ontology）和数据库（Database）两类。 本体在人工只能领域，本体是通过对象类型、属性类型以及关系类型对领域知识进行形式化描述的模型。本体强调抽象的概念表示，因此只对数据的定义进行了描述，而没有描述具体的实例数据。 数据库数据库是计算机科学家为了电脑表示和存储计算机应用中需要的数据而设计开发的产品。不同类型的数据库（关系数据库、面向对象数据库、非关系型数据库等），一般用于存储数据，这些数据可以进行传递和交换。数据库对于数据的描述和数据本身的操作提供了不同的描述语言，因此我们认为，数据库系统对数据描述和数据记录的表示和存储采用了不同的机制。 3.知识图谱的数据描述实际上，人工智能应用中不仅需要具体的知识实例数据，数据的描述和定义也非常关键，例如概念上下位知识（‘大熊猫’是一种‘熊科动物’）、属性之间的关系（‘子女’与‘父母’是逆关系）、属性的约束（一个‘人’的‘父母’只有‘2个’）等。 知识图谱用统一的形式对知识实例数据的定义和具体知识数据进行描述，即用三元组形式（二元关系）对知识系统进行资源描述和存储。例如：WIkidata中不仅用&lt;Max Planck, instance of ,human&gt;表达具体的实例数据，也用&lt;place of birth, value type constraint, geographical object&gt;等三元组对相关知识结构进行了描述。 实例数据只有在满足系统约定的‘框架’约束下运用才能体现为‘知识’，其中“框架”（元知识）就是对知识的描述和定义，知识框架和实例数据共同构成一个完整的知识系统。—-待续—–"},{"title":"LateXLearning","date":"2020-10-11T15:59:56.000Z","url":"/SmartBoyMB.github.io/2020/10/11/LateXLearning/","tags":[["-工具","/SmartBoyMB.github.io/tags/%E5%B7%A5%E5%85%B7/"]],"categories":[["学习","/SmartBoyMB.github.io/categories/%E5%AD%A6%E4%B9%A0/"]],"content":"LaTex Learning Life在这里我会记录一些在学习LaTeX工具过程中遇到的一些问题和坑。 1.编写伪代码编写伪代码需要导入包algorithm、algorithmic、algpseudocode，但在实践中发现导入包algorithm后不要再导入algorithmic，否则会因为冲突报错，报错形式为Missing \\endcsname inserted。"},{"title":"Hello my blog life","date":"2020-10-09T11:06:06.000Z","url":"/SmartBoyMB.github.io/2020/10/09/Hellpmyblog/","tags":[["生活","/SmartBoyMB.github.io/tags/%E7%94%9F%E6%B4%BB/"],["工具","/SmartBoyMB.github.io/tags/%E5%B7%A5%E5%85%B7/"]],"categories":[["学习","/SmartBoyMB.github.io/categories/%E5%AD%A6%E4%B9%A0/"]],"content":"start my blog life从今天开始就开始编写自己blog来记录自己的学习经历啦！！！ 1.如何来搭建一个博客首先我是基于github平台，使用Hexo工具来搭建我的个人博客的。在这里不详细的说明整个搭建的过程，网络上有非常多且详细的教程来指导博客的搭建，这篇博客主要是说明我搭建时的部分内容和遇到的难题。 这是我搭建时参考的视频教程： 2.GitHub仓库的设置在创建github仓库时，需要将仓库名命名为yourname.github.io，并且进入setting界面，下滑到GitHub Pages选项，设置source下的Branch为你博客部署的分支，并点击save保存。 3.GitHub测试访问博客时404问题在设置好后，如果按照视频教程中通过仓库名作为网址（README文件内网址）测试访问博客网址，会出现页面404的问题。这个问题难为了我很久，查询了资料才发现这个问题出现在我们创建github账号以后，创建的github的博客域名和自己的账号不一样导致的。如果直接通过仓库名作为网址访问的话，博客域名和账号名字要一样，不然会404。但是，如果名字不一样，就需要通过setting界面下GitHub Pages选项下的site网址访问。 4.Hexo工具部署博客到GitHub参数设置问题Hexo文档地址： 在部署时，_config.yml文件的一些参数设置 参数 描述 url setting界面下GitHub Pages选项下的site地址。 root /yourname.github.io/(两个斜杠不能去省略) deploy：type git（可以是其他方式) deploy：repo 仓库的git地址(也可以是其他方式的地址) deploy：branch 对应在setting界面，下滑到GitHub Pages选项，设置source下的Branch名称 5.主题的下载和设置主题下载地址： 首先在该地址浏览找到自己喜欢的主题，并通过提供的github链接下载文件放置在Hexo工具创建的博客文件的themes文件夹下。下一步在_config.yml文件内改变themes的参数为新主题名。其他的设置参照给的thems内的README文件内的说明进行设置。"}]